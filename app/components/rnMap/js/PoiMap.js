import React, {Component} from 'react'import {    StyleSheet,    View,    Text,    ScrollView,    TouchableOpacity,    TouchableHighlight,    Dimensions,    TextInput,    Alert,    Platform,    WebView} from 'react-native'import constants from './MapConstants';import colors from '../../../resources/colors';import mapData from '../../../test/map';import MapSearchBar from './MapSearchBar';const patchPostMessageFunction = function() {    var originalPostMessage = window.postMessage;    var patchedPostMessage = function(message, targetOrigin, transfer) {        originalPostMessage(message, targetOrigin, transfer);    };    patchedPostMessage.toString = function() {        return String(Object.hasOwnProperty).replace('hasOwnProperty', 'postMessage');    };    window.postMessage = patchedPostMessage;};const patchPostMessageJsCode = '(' + String(patchPostMessageFunction) + ')();';export default class PoiMap extends Component {    constructor(props) {        super(props)        this.state = {            loaded: false,            searchText: '',            showSearchResult: false,            searchResult: {                error: 0,                message: '',                data: []            },        };        this._handleMessage = this._handleMessage.bind(this);    }    render() {        return (            <View style={styles.container}>                <MapSearchBar                    ref={ref => this._searchbar = ref}                    _onSearchInputFocus = {this._onSearchInputFocus}                    _clearSearchInput = {this._clearSearchInput}                    _searchTextChange = {(text) => this._searchTextChange(text)}                    _onSearchResultPress = {(poiInfo) => this._onSearchResultPress(poiInfo)}                    showSearchResult = {this.state.showSearchResult}                    searchResult = {this.state.searchResult}                    searchText = {this.state.searchText}                />                <View style={styles.mapContainer}>                    <WebView                        ref={ref => this._webview = ref}                        style={{flex: 1}}                        source={Platform.OS=='ios'?require('./amap.html'):{uri:'file:///android_asset/amap.html'}}                        domStorageEnabled={true}                        javaScriptEnabled={true}                        onMessage={this._handleMessage}                        onLoad={this._onLoad}                        injectedJavaScript={patchPostMessageJsCode}                    />                </View>            </View>        )    }    _onLoad = () => {        if(this.state.loaded)            return;        // webView 加载地图完毕后，发送超市地点的地理经纬度        this._postMessage(constants.POI,mapData);        this.setState({loaded: true})    }    _clearSearchInput = () => this.setState({searchText: '', showSearchResult: false,})    _searchTextChange = (text) => {        this.setState({searchText: text,})        if (!text) {            this._clearSearchInput()            return;        }        this._postMessage(constants.SEARCH,text);    }    _onSearchInputFocus = () => this.setState({showSearchResult:true})    _onSearchResultPress = (poiInfo) => {        this.setState({            searchText: poiInfo.address,            showSearchResult: false,        })        this._postMessage(constants.PAN,poiInfo)    }    _postMessage = (command,data) => this._webview.postMessage(JSON.stringify({        command:command,        data:data,    }))    _handleMessage = (event) => {        const msgData = JSON.parse(event.nativeEvent.data)        switch (msgData.command) {            case constants.PAN:break;            case constants.POI:break;            case constants.SEARCH:                let isOk = msgData.data && msgData.data.length>0                if (this.state.searchText) {                    this.setState({                        searchResult: {                            error: isOk ? 0 : -1,                            message: isOk ? '' : '未查询到结果',                            data: isOk ? msgData.data : []                        },                        showSearchResult: true,                    })                }                break;        }    }}const styles = StyleSheet.create({    container: {        flex: 1,        flexDirection: 'column',    },    mapContainer: {        flex:1,    },    mapMarker: {        position: 'absolute',        width: constants.ICON_WIDTH,        height: constants.ICON_HEIGHT,        alignItems: 'center',        justifyContent: 'center'    },    searchContainer: {        position: 'absolute',        top: 5,        left: 5,        right: 5,        backgroundColor: 'white'    },    searchInputContainer: {        flexDirection: 'row',        alignItems: 'center',        padding: 10,        borderWidth: StyleSheet.hairlineWidth,        borderColor: '#c8c7cc',    },    inputContainerStyle: {        flex: 1,        margin: 0,        paddingHorizontal: 10,        borderBottomWidth: 0,        borderLeftWidth: StyleSheet.hairlineWidth,        borderLeftColor: '#c8c7cc',    },    inputStyle: {        height: 30,        padding: 0,        margin: 0,    },    searchInputLeftTxt: {        fontSize: 16,        color: colors.primaryColor,        paddingRight: 10,    },    noSearchResultContainer: {        padding: 10,        borderWidth: StyleSheet.hairlineWidth,        borderColor: '#c8c7cc',        borderTopWidth: 0    },    noSearchResultTxt: {        fontSize: 18,        color: '#030303'    },    searchResultsContainer: {        borderWidth: StyleSheet.hairlineWidth,        borderColor: '#c8c7cc',        borderTopWidth: 0    },    searchResultContainer: {        height: 70,        flexDirection: 'row',        alignItems: 'center',        padding: 10,        borderBottomWidth: StyleSheet.hairlineWidth,        borderBottomColor: '#c8c7cc'    },    searchResultRightContainer: {        flex: 1,        paddingLeft: 20    },    searchResultName: {        fontSize: 18,        color: '#030303'    },    searchResultAddr: {        fontSize: 12,        color: '#b2b2b2',        marginTop: 5    },    poiListContainer: {        flex: 1,        paddingHorizontal: 10,        paddingVertical: 5,        marginTop: 5,        borderWidth: StyleSheet.hairlineWidth,        borderColor: "#c8c7cc",    },    poiItemContainer: {        borderBottomWidth: StyleSheet.hairlineWidth,        borderColor: "#999",        paddingVertical: 5,        justifyContent: 'center',        alignItems: 'flex-start',    },    poiItemName: {        fontSize: 16,        color: '#000',    },    poiItemAddress: {        fontSize: 14,        color: '#999',    },    btnSubmit: {        backgroundColor: colors.primaryColor,        justifyContent: 'center',        alignItems: 'center',        margin: 5,        paddingVertical: 5,        borderRadius: 4    },    btnText: {        color: '#fff',        fontSize: 18,    }})